{
  "_from": "react-cookie",
  "_id": "react-cookie@4.0.1",
  "_inBundle": false,
  "_integrity": "sha512-h61qAtSXvfjNa81h3XCFdFoyFaF+nb7gjK0cxQuTiCPMPAe50D950FjLCFhaIfSpAesQFAmkxf5XFpWoEVBDAA==",
  "_location": "/react-cookie",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-cookie",
    "fetchSpec": "latest",
    "name": "react-cookie",
    "raw": "react-cookie",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "https://registry.npmjs.org/react-cookie/-/react-cookie-4.0.1.tgz",
  "_shasum": "c21b2c30a5cacf320b45338fa3dcaf76d9fe9c2c",
  "_spec": "react-cookie",
  "_where": "/home/muru/projects/rails/whim",
  "author": {
    "email": "benoit@reactivestack.com",
    "name": "Benoit Tremblay"
  },
  "bugs": {
    "url": "https://github.com/reactivestack/cookies/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "@types/hoist-non-react-statics": "^3.0.1",
    "hoist-non-react-statics": "^3.0.0",
    "universal-cookie": "^4.0.0"
  },
  "deprecated": false,
  "description": "Universal cookies for React",
  "devDependencies": {
    "@babel/cli": "^7.0.0",
    "react": "^16.8.0",
    "react-dom": "^16.8.0",
    "rimraf": "^2.6.1",
    "rollup": "^1.16.4",
    "typescript": "^3.0.1"
  },
  "files": [
    "LICENSE",
    "cjs",
    "es6",
    "index.d.ts",
    "lib",
    "umd"
  ],
  "homepage": "https://github.com/reactivestack/cookies/tree/master/packages/react-cookie/#readme",
  "keywords": [
    "cookie",
    "isomophic",
    "react",
    "universal"
  ],
  "license": "MIT",
  "main": "cjs/index.js",
  "module": "es6/index.js",
  "name": "react-cookie",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": ">= 16.3.0"
  },
  "readme": "<h3 align=\"center\">\r\n  <a href=\"packages/react-cookie\">react-cookie</a>\r\n</h3>\r\n\r\n<p align=\"center\">\r\n  Universal cookies for <a href=\"https://facebook.github.io/react\">React</a><br />\r\n  <a href=\"https://badge.fury.io/js/react-cookie\"><img src=\"https://badge.fury.io/js/react-cookie.svg\" /></a>\r\n</p>\r\n\r\n[![Build Status](https://travis-ci.org/reactivestack/cookies.svg?branch=master)](https://travis-ci.org/reactivestack/cookies)\r\n<br />\r\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/coookies.svg)](https://saucelabs.com/u/coookies)\r\n\r\n## Integrations\r\n\r\n- [`universal-cookie`](https://www.npmjs.com/package/universal-cookie) - Universal cookies for JavaScript\r\n- [`universal-cookie-express`](https://www.npmjs.com/package/universal-cookie-express) - Hook cookies get/set on Express for server-rendering\r\n\r\n## Minimum requirement\r\n\r\n### react-cookie @ v3.0+\r\n\r\n- React.js >= 16.3.0 (new context API + forward ref)\r\n\r\n### react-cookie @ v0.0-v2.2\r\n\r\n- React.js >= 15\r\n\r\n## Getting started\r\n\r\n`npm install react-cookie`\r\n\r\nor in the browser (global variable `ReactCookie`):\r\n\r\n```html\r\n<script\r\n  crossorigin\r\n  src=\"https://unpkg.com/react@16/umd/react.production.js\"\r\n></script>\r\n<script\r\n  crossorigin\r\n  src=\"https://unpkg.com/universal-cookie@3/umd/universalCookie.min.js\"\r\n></script>\r\n<script\r\n  crossorigin\r\n  src=\"https://unpkg.com/react-cookie@3/umd/reactCookie.min.js\"\r\n></script>\r\n```\r\n\r\n## `<CookiesProvider />`\r\n\r\nSet the user cookies\r\n\r\nOn the server, the `cookies` props must be set using `req.universalCookies` or `new Cookie(cookieHeader)`\r\n\r\n## `useCookies([dependencies])`\r\n\r\nAccess and modify cookies using React hooks.\r\n\r\n```jsx\r\nconst [cookies, setCookie, removeCookie] = useCookies(['cookie-name']);\r\n```\r\n\r\n**React hooks are available starting from React 16.8**\r\n\r\n### `dependencies` (optional)\r\n\r\nLet you optionally specify a list of cookie names your component depend on or that should trigger a re-render. If unspecified, it will render on every cookie change.\r\n\r\n### `cookies`\r\n\r\nJavascript object with all your cookies. The key is the cookie name.\r\n\r\n### `setCookie(name, value, [options])`\r\n\r\nSet a cookie value\r\n\r\n- name (string): cookie name\r\n- value (string|object): save the value and stringify the object if needed\r\n- options (object): Support all the cookie options from RFC 6265\r\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\r\n  - expires (Date): absolute expiration date for the cookie\r\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\r\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\r\n  - secure (boolean): Is only accessible through HTTPS?\r\n  - httpOnly (boolean): Is only the server can access the cookie?\r\n  - sameSite (boolean|lax|strict): Strict or Lax enforcement\r\n\r\n### `removeCookie(name, [options])`\r\n\r\nRemove a cookie\r\n\r\n- name (string): cookie name\r\n- options (object): Support all the cookie options from RFC 6265\r\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\r\n  - expires (Date): absolute expiration date for the cookie\r\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\r\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\r\n  - secure (boolean): Is only accessible through HTTPS?\r\n  - httpOnly (boolean): Is only the server can access the cookie?\r\n  - sameSite (boolean|lax|strict): Strict or Lax enforcement\r\n\r\n## `withCookies(Component)`\r\n\r\nGive access to your cookies anywhere. Add the following props to your component:\r\n\r\n- cookies: Cookies instance allowing you to get, set and remove cookies.\r\n- allCookies: All your current cookies in an object.\r\n\r\nYour original static properties will be hoisted on the returned component. You can also access the original component by using the `WrappedComponent` static property. Example:\r\n\r\n```jsx\r\nfunction MyComponent() {\r\n  return null;\r\n}\r\nconst NewComponent = withCookies(MyComponent);\r\nNewComponent.WrappedComponent === MyComponent;\r\n```\r\n\r\n## Cookies\r\n\r\n### `get(name, [options])`\r\n\r\nGet a cookie value\r\n\r\n- name (string): cookie name\r\n- options (object):\r\n  - doNotParse (boolean): do not convert the cookie into an object no matter what\r\n\r\n### `getAll([options])`\r\n\r\nGet all cookies\r\n\r\n- options (object):\r\n  - doNotParse (boolean): do not convert the cookie into an object no matter what\r\n\r\n### `set(name, value, [options])`\r\n\r\nSet a cookie value\r\n\r\n- name (string): cookie name\r\n- value (string|object): save the value and stringify the object if needed\r\n- options (object): Support all the cookie options from RFC 6265\r\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\r\n  - expires (Date): absolute expiration date for the cookie\r\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\r\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\r\n  - secure (boolean): Is only accessible through HTTPS?\r\n  - httpOnly (boolean): Is only the server can access the cookie?\r\n  - sameSite (boolean|lax|strict): Strict or Lax enforcement\r\n\r\n### `remove(name, [options])`\r\n\r\nRemove a cookie\r\n\r\n- name (string): cookie name\r\n- options (object): Support all the cookie options from RFC 6265\r\n  - path (string): cookie path, use `/` as the path if you want your cookie to be accessible on all pages\r\n  - expires (Date): absolute expiration date for the cookie\r\n  - maxAge (number): relative max age of the cookie from when the client receives it in second\r\n  - domain (string): domain for the cookie (sub.domain.com or .allsubdomains.com)\r\n  - secure (boolean): Is only accessible through HTTPS?\r\n  - httpOnly (boolean): Is only the server can access the cookie?\r\n  - sameSite (boolean|lax|strict): Strict or Lax enforcement\r\n\r\n## Simple Example with React hooks\r\n\r\n```js\r\n// Root.jsx\r\nimport React from 'react';\r\nimport App from './App';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nexport default function Root() {\r\n  return (\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  );\r\n}\r\n```\r\n\r\n```js\r\n// App.jsx\r\nimport React from 'react';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport NameForm from './NameForm';\r\n\r\nfunction App() {\r\n  const [cookies, setCookie] = useCookies(['name']);\r\n\r\n  function onChange(newName) {\r\n    setCookie('name', newName, { path: '/' });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NameForm name={cookies.name} onChange={onChange} />\r\n      {cookies.name && <h1>Hello {cookies.name}!</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n## Simple Example with Higher-Order Component\r\n\r\n```js\r\n// Root.jsx\r\nimport React from 'react';\r\nimport App from './App';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nexport default function Root() {\r\n  return (\r\n    <CookiesProvider>\r\n      <App />\r\n    </CookiesProvider>\r\n  );\r\n}\r\n```\r\n\r\n```js\r\n// App.jsx\r\nimport React, { Component } from 'react';\r\nimport { instanceOf } from 'prop-types';\r\nimport { withCookies, Cookies } from 'react-cookie';\r\n\r\nimport NameForm from './NameForm';\r\n\r\nclass App extends Component {\r\n  static propTypes = {\r\n    cookies: instanceOf(Cookies).isRequired\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const { cookies } = props;\r\n    this.state = {\r\n      name: cookies.get('name') || 'Ben'\r\n    };\r\n  }\r\n\r\n  handleNameChange(name) {\r\n    const { cookies } = this.props;\r\n\r\n    cookies.set('name', name, { path: '/' });\r\n    this.setState({ name });\r\n  }\r\n\r\n  render() {\r\n    const { name } = this.state;\r\n\r\n    return (\r\n      <div>\r\n        <NameForm name={name} onChange={this.handleNameChange.bind(this)} />\r\n        {this.state.name && <h1>Hello {this.state.name}!</h1>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withCookies(App);\r\n```\r\n\r\n## Server-Rendering Example\r\n\r\n```js\r\n// src/components/App.js\r\nimport React from 'react';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nimport NameForm from './NameForm';\r\n\r\nfunction App() {\r\n  const [cookies, setCookie] = useCookies(['name']);\r\n\r\n  function onChange(newName) {\r\n    setCookie('name', newName, { path: '/' });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <NameForm name={cookies.name} onChange={onChange} />\r\n      {cookies.name && <h1>Hello {cookies.name}!</h1>}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n```\r\n\r\n```js\r\n// src/server.js\r\nimport React from 'react';\r\nimport ReactDOMServer from 'react-dom/server';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nimport Html from './components/Html';\r\nimport App from './components/App';\r\n\r\nexport default function middleware(req, res) {\r\n  const markup = ReactDOMServer.renderToString(\r\n    <CookiesProvider cookies={req.universalCookies}>\r\n      <App />\r\n    </CookiesProvider>\r\n  );\r\n\r\n  const html = ReactDOMServer.renderToStaticMarkup(<Html markup={markup} />);\r\n\r\n  res.send('<!DOCTYPE html>' + html);\r\n}\r\n```\r\n\r\n```js\r\n// src/client.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CookiesProvider } from 'react-cookie';\r\n\r\nimport App from './components/App';\r\n\r\nconst appEl = document.getElementById('main-app');\r\n\r\nReactDOM.render(\r\n  <CookiesProvider>\r\n    <App />\r\n  </CookiesProvider>,\r\n  appEl\r\n);\r\n```\r\n\r\n```js\r\n// server.js\r\nrequire('@babel/register');\r\n\r\nconst express = require('express');\r\nconst serverMiddleware = require('./src/server').default;\r\nconst cookiesMiddleware = require('universal-cookie-express');\r\n\r\nconst app = express();\r\n\r\napp\r\n  .use('/assets', express.static('dist'))\r\n  .use(cookiesMiddleware())\r\n  .use(serverMiddleware);\r\n\r\napp.listen(8080, function() {\r\n  console.log('Listening on 8080...');\r\n});\r\n```\r\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/reactivestack/cookies.git"
  },
  "scripts": {
    "build": "npm run clean && npm run build-es6 && npm run build-cjs && npm run build-umd && npm run build-legacy",
    "build-cjs": "babel es6 -D -d cjs",
    "build-es6": "tsc",
    "build-legacy": "babel es6 -D -d lib",
    "build-umd": "rollup -c",
    "clean": "rimraf lib && rimraf es6 && rimraf cjs && rimraf umd"
  },
  "version": "4.0.1"
}
